Here’s a concise summary of the ProjectDiscovery analysis of CVE‑2025‑29927: Next.js Middleware Authorization Bypass:

⸻

🔍 Overview

A critical vulnerability (CVE‑2025‑29927) was discovered in Next.js middleware—used for tasks like authentication, routing, and adding headers. It allows attackers to bypass any middleware-based controls (auth, CSP, redirects, etc.) simply by adding a crafted HTTP header: x-middleware-subrequest  .

⸻

🧠 How It Works

Internally, Next.js uses the x-middleware-subrequest header to detect and prevent recursive middleware calls. However, it was found that if an external request includes x-middleware-subrequest containing the middleware’s own identifier (e.g. "middleware" or "src/middleware"), Next.js skips middleware entirely via NextResponse.next()  .
	•	Pre‑12.2: identifier looks like pages/_middleware or pages/dashboard/_middleware
	•	12.2–13.x: becomes simply middleware or src/middleware
	•	≥ 13.2.0: depth checking requires five repetitions, e.g. middleware:middleware:middleware:middleware:middleware  

⸻

✅ Affected Versions

Next.js versions impacted include:
	•	11.1.4 → 13.5.6
	•	14.x (before 14.2.25)
	•	15.x (before 15.2.3)
Deployments on Vercel (and platforms like Netlify/Cloudflare) are automatically protected, but self-hosted apps must take action  .

⸻

⚠️ Impact
	•	Auth bypass: access protected routes (e.g., /dashboard/admin) without authentication
	•	CSP bypass, enabling XSS or other header protections to be circumvented
	•	Cache poisoning, where improper headers may allow unauthorized content injection  

⸻

🛠 Remediation
	1.	Upgrade to one of the patched Next.js versions:
	•	14.2.25+, 15.2.3+, or suitable 13.x/12.x releases  
	2.	If immediate upgrading isn’t possible, strip or block the x-middleware-subrequest header upstream—using load balancer rules (Cloudflare, AWS ELB), web servers (Nginx, Apache), or custom Express middleware  .

Example for Nginx:

proxy_set_header x-middleware-subrequest "";

Or in Express:

app.use((req, res, next) => {
  delete req.headers['x-middleware-subrequest'];
  next();
});


⸻

🛡 Detection

ProjectDiscovery released a Nuclei template to scan for eligible endpoints, detect middleware‑protected paths, and attempt bypass using crafted header payloads  .

⸻

In Summary
	•	What: CVE‑2025‑29927 lets attackers bypass middleware by spoofing a Next.js internal header
	•	Who: Affects Next.js 11.1.4→15.x (<14.2.25/15.2.3) — self‑hosted deployments are vulnerable
	•	How: Add x-middleware-subrequest: [middleware identifier] to bypass
	•	Fix: Upgrade or strip the header before it reaches your app

This vulnerability underscores why middleware shouldn’t be trusted for critical auth logic unless the underlying framework is hardened against such header-based bypasses.

Let me know if you’d like help applying the fix or running the Nuclei scan!